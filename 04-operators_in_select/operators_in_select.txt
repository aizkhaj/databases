1. Write out a generic SELECT statement.
    SELECT <column name>
    FROM <table name>
    WHERE <insert criteria>

2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
    SFW - Safe For Work. heh.

3. Given this dogs table, write queries to select the following pieces of data:
    - Display the name, gender, and age of all dogs that are part Labrador.
    SELECT name, gender, age
    FROM dogs
    WHERE breed LIKE '%labrador%';

    - Display the ids of all dogs that are under 1 year old.
    SELECT id
    FROM dogs
    WHERE age < 1;

    - Display the name and age of all dogs that are female and over 35lbs.
    SELECT name, age
    FROM dogs
    WHERE gender = 'F' AND weight > 35;

    - Display all of the information about all dogs that are not Shepherd mixes.
    SELECT *
    FROM dogs
    WHERE breed NOT LIKE '%shepherd%';

    - Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
    SELECT id, age, weight, breed
    FROM dogs
    WHERE weight > 60 OR breed = 'great dane';


4. Given this cats table, what records are returned from these queries?
    - SELECT name, adoption_date FROM cats;
    name 	    adoption_date
    Mushi 	    2016-03-22
    Seashell    (null)
    Azul 	    2016-04-17
    Victoire    2016-09-01
    Nala 	    (null)

    - SELECT name, age FROM cats;
    name 	    age
    Mushi 	    1
    Seashell    7
    Azul 	    3
    Victoire    7
    Nala 	    1


5. From the cats table, write queries to select the following pieces of data.
    - Display all the information about all of the available cats.
    SELECT *
    FROM cats;

    - Choose one cat of each age to show to potential adopters.
    SELECT DISTINCT age
    FROM cats;

    - Find all of the names of the cats, so you don’t choose duplicate names for new cats.
    SELECT name
    FROM cats;


6. List each comparison operator and explain, in your own words, when you would use it. Include a real world example for each.
    - If you can’t list these from memory, do these flashcards until you can!

  (>) is used when comparing two objects to find cells greater than a value.
    SELECT * FROM cats WHERE age > 1;

  (>=) is used when comparing two objects to find cells greater than or equal to a value.
    SELECT * FROM cats WHERE age >= 1;

  (<) is used when comparing two objects to find cells less than a value.
    SELECT * FROM cats WHERE age < 7;

  (<=) is used when comparing two objects to find cells less than or equal to a value.
    SELECT * FROM cats WHERE age <= 7;

  (=) is used when comparing two objects to find cells equal to a value.
    SELECT * FROM cats WHERE age = 3;

  (!=) is used when comparing two objects to find cells that are not equal to a value.
    SELECT * FROM cats WHERE age != 7;

  (<>) is used when comparing two objects to find cells greater than or less than a value (or alternatively known as NOT).
    SELECT * FROM cats WHERE age <> 3;

  (NOT) selects cells where a given expression is false.
    SELECT * FROM cats WHERE name NOT LIKE 'A%';

  (OR) selects cells where one of two or more expressions is true.
    SELECT * FROM cats WHERE gender = 'M' OR age < 4;

  (AND) selects cells where both (or all) expressions are true.
    SELECT * FROM cats WHERE gender = 'F' AND age < 7;

  (LIKE) selects cells where part of the cell matches a given pattern.
    SELECT * FROM cats WHERE name NOT LIKE 'Z%';

  (BETWEEN) selects cells where where the value is greater than or equal to one value and less than or equal to another.
    SELECT * FROM cats WHERE age BETWEEN 1 AND 3;

  (IS DISTINCT FROM) selects cells that are not equal to a given value.
    SELECT * FROM cats WHERE age IS DISTINCT FROM 3;


7. From the cats table, what data is returned from these queries?
    - SELECT name FROM cats WHERE gender = ‘F’;
    name
    Seashell
    Nala

    - SELECT name FROM cats WHERE age <> 3;
    name
    Mushi
    Seashell
    Victoire
    Nala

    - SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
    id
    3
    4